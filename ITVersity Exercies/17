# Instructions
# Get the stock tickers from NYSE data for which full name is missing in NYSE symbols data

# Data Description
# NYSE data with "," as delimiter is available in HDFS

# NYSE data information:

# HDFS location: /public/nyse
# There is no header in the data
# NYSE Symbols data with " " as delimiter is available in HDFS

# NYSE Symbols data information:

# HDFS location: /public/nyse_symbols
# First line is header and it should be included
# Output Requirements
# Get unique stock ticker for which corresponding names are missing in NYSE symbols data
# Save data back to HDFS
# File Format: avro
# Avro dependency details: 
# groupId -> com.databricks, artifactId -> spark-avro_2.10, version -> 2.0.1
# Place the sorted NYSE data in the HDFS directory
# /user/`whoami`/problem17/solution/
# Replace `whoami` with your OS user name
# End of Problem

spark-shell --master yarn --conf spark.ui.port=15241 --num-executors 4 --executor-memory 3G --executor-cores 2 --packages com.databricks:spark-avro_2.10:2.0.1

import com.databricks.spark.avro._
val nyse_data = sc.textFile("/public/nyse")

val nyse_symbols = sc.textFile("/public/nyse_symbols")

val header = nyse_symbols.first

val noheader = nyse_symbols.filter(rec=> rec != header)

val nyseDF = nyse_data.map(rec=> {
(rec.split(",")(0))
}).distinct.toDF("stockticker")

val symbolsDF = noheader.map(rec=> {
(rec.split("\t")(0).trim,rec.split("\t")(1))
}).toDF("symbol","text")

nyseDF.registerTempTable("data_nyse")
symbolsDF.registerTempTable("symbols_data")

sqlContext.setConf("spark.sql.shuffle.partitions","2")

val query = sqlContext.sql("select distinct stockticker from data_nyse d left outer join symbols_data s on d.stockticker = s.symbol where s.text is null")

query.coalesce(1).write.avro("/user/chaitanyapolipalli/Practice_exam/problem17/solution/")
